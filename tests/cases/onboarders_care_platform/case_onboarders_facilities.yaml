# CXTB-161-Access Facilities Directory & Filter
TestOnboardersAccessFacilitiesDirectoryFilter:
  Environment: Settings
  Roles: 
    - Role: desktopChrome
      App: "desktop"
  Actions:
  # log in with my onboarder user
    - Type: case
      Value: OnboarderCarePartnerLogin
  # Click on the facilites button
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facilities_button$
  # Click the first active letter button
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_first_active_letter$
  # Get the value to compare later
    - Type: get_text
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_first_active_letter$
      Greps:
        - var: FILTER_LETTER
          match: "(.*)"
  #Verify is selected
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_first_active_letter$
      Greps:
        - var: SELECTED_CLASS
          attr: class
          match: "(.*)"
    - Type: assert
      Asserts:
        - Type: contain
          Var: SELECTED_CLASS
          Value: 'is-selected'
  #Verify it was filtered by the selected letter
    - Type: get_text
      Strategy: xpath
      Id: $PAGE.care_platform_facility.first_facility$
      Greps:
        - var: FIRST_LETTER
          match: ^[a-zA-Z]   #The match selects: The first char from the starter word (^) that is a letter ([a-zA-Z])
    - Type: assert
      Asserts: 
        - Type: eq
          Var: FIRST_LETTER
          Value: $AND_CLI_FILTER_LETTER$
  #Remove the filter by letter
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_first_active_letter$
  #Check is not selected anymore
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_first_active_letter$
      Greps:
        - var: NOT_SELECTED_CLASS
          attr: class
          condition: nempty
          match: "(.*)"
    - Type: assert
      Asserts:
      - Type: n_contain
        Var: NOT_SELECTED_CLASS
        Value: 'is-selected'
  #Get the first lastname in the list
    - Type: get_text
      Strategy: xpath
      Id: $PAGE.care_platform_facility.first_facility$
      Greps:
        - var: FIRST_FACILITY_NO_FILTER
          match: (.*)
  #Add the search filter
    - Type: click
      Strategy: id
      Id: $PAGE.care_platform_facility.search_button$
    - Type: send_keys
      Strategy: id
      Id: $PAGE.care_platform_facility.search_text$
      Value: $AND_CLI_FIRST_FACILITY_NO_FILTER$
  #Verify there is at least 1 facility with that name
    - Type: set_env_var
      Value: $AND_CLI_FIRST_FACILITY_NO_FILTER$
      Var: facility_name1
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_based_on_name$
    - Type: get_text
      Strategy: xpath
      Id: $PAGE.care_platform_facility.first_facility$
      Greps:
        - var: FIRST_FACILITY
          match: (.*)
  #Verify the first facility contains the text filtered
    - Type: assert
      Asserts: 
        - Type: contain
          Var: FIRST_FACILITY
          Value: $AND_CLI_FIRST_FACILITY_NO_FILTER$
  #Clear the search by clicking small "x" at right of field
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.clear_search_button$
  #Verify there is at least 1 facility
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility.first_facility$
  #Click on a facility
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.first_facility$
    - Type : wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facility_name$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.overview_button$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.local_hospitals_button$

# CTBX-162- Click and View Facility Device Record From Listing
TestOnboarderClickAndViewFacilitiesDevice:
    Environment: Settings
    Roles:
    - Role: desktopChrome
      App: "desktop"
    Actions:
    # login in onboarder Care Partner
    - Type: case
      Value: OnboarderCarePartnerLogin 
    # click in facilities button 
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.facilities_button$
    # click on the first listing record
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.first_facility$
    # click on Overview button and verify if tab showing belongs to Overview
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.overview_button$
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility.tabs_content$
      Greps:
      - var: TAB_CLASS
        attr: tab-title
        condition: nempty
        match: "(.*)"
    - Type: assert
      Asserts:
      - Type: contain
        Var: TAB_CLASS
        Value: 'Overview'
    # click on Local Hospitals button and verify if tab showing belongs to Local Hospitals
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.local_hospitals_button$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility.title_subtab_local_hospital$
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility.tabs_content$
      Greps:
      - var: TAB_CLASS
        attr: tab-title
        condition: nempty
        match: "(.*)"
    - Type: assert
      Asserts:
      - Type: contain
        Var: TAB_CLASS
        Value: 'Local Hospitals'
    # click on Devices button and verify if tab showeing belogs to Devices
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility.devices_button$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility.title_subtab_devices$
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility.tabs_content$
      Greps:
      - var: TAB_CLASS
        attr: tab-title
        condition: nempty
        match: "(.*)"
    - Type: assert
      Asserts:
      - Type: contain
        Var: TAB_CLASS
        Value: 'Devices'
    # Click on record button and check the Overview Tab
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_participant_details.records_button$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.info_title$
    # Click on Devices button to see the facility device list
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.devices_button$
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.device_status$
      Greps:
      - var: STATUS_CLASS
        attr: class
        condition: nempty
        match: "(.*)"
    - Type: assert
      Asserts:
      - Type: contain
        Var: STATUS_CLASS 
        Value: 'active'

#CXTB-518 Change Status for Existing Facility Device(s) - Facility Profile
TestOnboarderFacilityProfileChangeStatusForExistingFacilityDevice:
  Environment: Settings
  Vars:
    LOGOUT_OPTION: 'Go Off Shift'
  Precases:
    - OnboarderSetNurseToActive
    - AdminOnCallRefreshDevice
  Aftercases:
    - CarePlatformLogout
    - OnboarderSetNurseToActive
    - TerminateApp
  Roles: 
    - Role: desktopChrome
      App: desktop
    - Role: localiOS
      App: NeverAlone 
  Actions:
  # Call to login for Onboarder
    - Type: case
      Value: OnboarderCarePartnerLogin
  # Call login for nurses
    - Type: case
      Role: localiOS
      Value: LoginSNFHelper
  # Go to Facility Profile
    - Type: case
      Value: NavigationToFacilityProfile
  # Click on Records
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_participant_details.records_button$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.info_title$
  # Click "Devices" tab at top of page
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.devices_button$
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.device_status$
      Greps:
      - var: STATUS_CLASS
        attr: class
        condition: nempty
        match: "(.*)"
    - Type: assert
      Asserts:
      - Type: contain
        Var: STATUS_CLASS 
        Value: 'active'
  # Click "Edit" for device
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.edit_device_by_number$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.edit_device_by_number$
    # Wait for Edit Modal
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.modal_title$
    - Type: clear_field_by_backspace
      Strategy: id
      Id: $PAGE.care_platform_facility_edit_device_modal.nickname_input$
    - Type: generate_unique_name
      Name: "Automation Nickname"
      ResultVar: UNIQUE_NICKNAME
    - Type: send_keys
      Strategy: id
      Id: $PAGE.care_platform_facility_edit_device_modal.nickname_input$
      Value: $AND_CLI_UNIQUE_NICKNAME$
  # Change or add information to the main form fields, then click "Cancel"
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.cancel_button$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.cancel_button$
    - Type: wait_not_visible
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.modal_title$
    - Type: get_attribute
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.device_block$
      Greps:
        - var: DEVICE_BLOCK_TEXT
          attr: innerHTML
          condition: nempty
          match: "(.*)"
    - Type: assert
      Asserts:
        - Type: n_contain
          Var: DEVICE_BLOCK_TEXT
          Value: $AND_CLI_UNIQUE_NICKNAME$
  # Click "Edit" for device
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_Record.edit_device_by_number$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.modal_title$
    - Type: clear_field_by_backspace
      Strategy: id
      Id: $PAGE.care_platform_facility_edit_device_modal.nickname_input$
    - Type: send_keys
      Strategy: id
      Id: $PAGE.care_platform_facility_edit_device_modal.nickname_input$
      Value: $AND_CLI_UNIQUE_NICKNAME$
  # Change Status to "Deactivated"
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle_dropdown_deactivated_option$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle_dropdown_deactivated_option$
    # Wait for the notification
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_notifications.device_changes_saved_notification$
    - Type: wait_not_visible
      Strategy: xpath
      Id: $PAGE.care_platform_notifications.device_changes_saved_notification$
      Time: 20
    # Device is automatically logged out when account status change is saved.
    - Type: wait_for
      Strategy: class_chain
      Id: $PAGE.seniors_app_login.provision_device_btn$
      Role: localiOS
      Time: 20
  # Try to log in, it shouldn't
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.provision_device_btn$
    # Fill in the email and password fields with credentials.
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.email_input$
    - Type: send_keys
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.email_input$
      Value: $AND_CLI_facility_devices_user1$
    - Type: send_keys
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.password_input$
      Value: $AND_CLI_facility_devices_user1_pwd$
    - Type: sleep
      Time: 0.5
      Role: localiOS
    - Type: hide_keyboard
      Role: localiOS
    # Click on the Log In button.
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.login_btn$
  # Verify if device didn't log in 
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.login_btn$
  # Change to "Suspended"
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle_dropdown_suspended_option$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle_dropdown_suspended_option$
    # Wait for the notification
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_notifications.device_changes_saved_notification$
    - Type: wait_not_visible
      Strategy: xpath
      Id: $PAGE.care_platform_notifications.device_changes_saved_notification$
      Time: 20
  # Verify Suspended behavior
    # Click on the Log In button.
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.login_btn$
    # Alert banner
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_home.suspended_yellow_bar$
      Time: 20
    # New Request button
    - Type: return_element_attribute
      Strategy: xpath
      Role: localiOS
      Id: $PAGE.snf_home.new_request_btn$
      Attribute: enabled
      ResultVar: NEW_REQUEST_BUTTON_STATE
    - Type: assert
      Asserts:
        - Type: eq
          Var: NEW_REQUEST_BUTTON_STATE
          Value: false
    # Existing Request button
    - Type: return_element_attribute
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.snf_home.existing_request_button$
      Attribute: enabled
      ResultVar: EXISTING_REQUEST_BUTTON_STATE
    - Type: assert
      Asserts:
        - Type: eq
          Var: EXISTING_REQUEST_BUTTON_STATE
          Value: false
  # Change to "Active"
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle_dropdown_active_option$
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.status_toggle_dropdown_active_option$
    # Wait for the notification
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.care_platform_notifications.device_changes_saved_notification$
    - Type: wait_not_visible
      Strategy: xpath
      Id: $PAGE.care_platform_notifications.device_changes_saved_notification$
      Time: 20
  # Verify Active behavior
    # Device is automatically logged out when account status change is saved.
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.provision_device_btn$
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.provision_device_btn$
    # Fill in the email and password fields with credentials.
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.email_input$
    - Type: send_keys
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.email_input$
      Value: $AND_CLI_facility_devices_user1$
    - Type: send_keys
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.password_input$
      Value: $AND_CLI_facility_devices_user1_pwd$
    - Type: sleep
      Time: 0.5
      Role: localiOS
    - Type: hide_keyboard
      Role: localiOS
    # Click on the Log In button.
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.login_btn$
    # New Request button
    - Type: return_element_attribute
      Strategy: xpath
      Role: localiOS
      Id: $PAGE.snf_home.new_request_btn$
      Attribute: enabled
      ResultVar: NEW_REQUEST_BUTTON_STATE
    - Type: assert
      Asserts:
        - Type: eq
          Var: NEW_REQUEST_BUTTON_STATE
          Value: true
    # Existing Request button
    - Type: return_element_attribute
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.snf_home.existing_request_button$
      Attribute: enabled
      ResultVar: EXISTING_REQUEST_BUTTON_STATE
    - Type: assert
      Asserts:
        - Type: eq
          Var: EXISTING_REQUEST_BUTTON_STATE
          Value: true
    # Close onboarder's modal
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_facility_edit_device_modal.close_modal_button$

#CXTB-613 Create New Facility Device & Verify “Pre-Delivery” Status for Existing Facility Device(s) - Facility Profile
TestOnboarderCreateNewFacilityDeviceAndVerifyPreDelivery:
  Environment: Settings
  Vars:
    LOGOUT_OPTION: 'Go Off Shift'
  Aftercases:
    - CarePlatformLogout
    - TerminateApp
  Roles: 
    - Role: desktopChrome
      App: desktop
    - Role: localiOS
      App: NeverAlone
  Actions:
  # Call to login for Onboarder
    - Type: case
      Value: OnboarderCarePartnerLogin
  # Go to Facility Profile
    - Type: click
      Strategy: xpath
      Id: $PAGE.facility_leadership_care_platform_home.facilities_header_tab$
  # Click on an active facility
    - Type: set_env_var
      Value: 'Beta Healthcare Center'
      Var: facility_name1
    - Type: click
      Strategy: xpath
      Id: $PAGE.facility_leadership_facilities_listing.facility_based_on_name$
  #Check facility details
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.facility_leadership_facility_details.facility_name$
  # Click on Records
    - Type: click
      Strategy: xpath
      Id: $PAGE.care_platform_participant_details.records_button$
  # Click “Add Device” button
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.onboarder_facility_profile.add_device_button$
    - Type: click
      Strategy: xpath
      Id: $PAGE.onboarder_facility_profile.add_device_button$
  # Select a number of devices you want to create
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.modal_title$
    - Type: wait_for
      Strategy: id
      Id: $PAGE.onboarder_add_device_modal.select_number_of_devices_dropdown$
    - Type: click
      Strategy: id
      Id: $PAGE.onboarder_add_device_modal.select_number_of_devices_dropdown$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.select_number_of_devices_option_4$
    - Type: click
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.select_number_of_devices_option_4$
    - Type: click
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.modal_title$
  # Check that the value is really 4
    - Type: get_attribute
      Strategy: id
      Role: desktopChrome
      Id: $PAGE.onboarder_add_device_modal.select_number_of_devices_dropdown$
      Greps:
        - var: DEVICE_QUANTITY
          attr: value
          condition: nempty
          match: "(.*)"
    - Type: assert
      Asserts:
        - Type: eq
          Var: DEVICE_QUANTITY
          Value: '4'
  # Click Cancel
    - Type: click
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.cancel_button$
    - Type: wait_not_visible
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.cancel_button$
  # Click Add Device again
    - Type: click
      Strategy: xpath
      Id: $PAGE.onboarder_facility_profile.add_device_button$
  # Create one device (default value)
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.modal_title$
    - Type: click
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.create_button$
  # Wait for notification
    - Type: wait_not_visible
      Strategy: xpath
      Id: $PAGE.onboarder_add_device_modal.create_button$
    - Type: wait_for
      Strategy: xpath
      Id: $PAGE.onboarders_notifications.new_device_notification$
    - Type: sleep
      Time: 1
    - Type: scroll_to
      Strategy: xpath
      Id: $PAGE.onboarder_facility_profile.newest_device$
      Options: false
    - Type: send_keys
      Strategy: xpath
      Id: $PAGE.onboarder_facility_profile.newest_device$
      Value: "arrow_down"
  # Check values of new device
    - Type: get_attribute
      Strategy: xpath
      Role: desktopChrome
      Id: $PAGE.onboarder_facility_profile.newest_device_status$
      Greps:
        - var: STATUS
          attr: textContent
          condition: nempty
          match: "(.*)"
    - Type: assert
      Asserts:
        - Type: contain
          Var: STATUS
          Value: 'Pre-delivery'
  # Getting values for SNF login
    - Type: get_attribute
      Strategy: xpath
      Role: desktopChrome
      Id: $PAGE.onboarder_facility_profile.newest_device_username$
      Greps:
        - var: USERNAME
          attr: innerText
          condition: nempty
          match: "(.*)"
    - Type: get_attribute
      Strategy: xpath
      Role: desktopChrome
      Id: $PAGE.onboarder_facility_profile.newest_device_password$
      Greps:
        - var: PASSWORD
          attr: innerText
          condition: nempty
          match: "(.*)"
  # Login into SNF with new device values
    - Type: wait_for
      Strategy: class_chain
      Id: $PAGE.seniors_app_login.provision_device_btn$
      Role: localiOS
      Time: 20
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.provision_device_btn$
    # Fill in the email and password fields with credentials.
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.email_input$
    - Type: send_keys
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.email_input$
      Value: $AND_CLI_USERNAME$
    - Type: send_keys
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.password_input$
      Value: $AND_CLI_PASSWORD$
    - Type: sleep
      Time: 0.5
      Role: localiOS
    - Type: hide_keyboard
      Role: localiOS
    # Click on the Log In button.
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.seniors_app_login.login_btn$
  # Check status on device
    - Type: wait_for
      Strategy: xpath
      Role: localiOS
      Id: $PAGE.seniors_app_home.status_yellow_banner$
      Time: 30
    - Type: return_element_attribute
      Strategy: xpath
      Role: localiOS
      Id: $PAGE.seniors_app_home.status_yellow_banner$
      Attribute: label
      ResultVar: YELLOW_BAR_LABEL_VALUE
      NoNewLine: true
    - Type: assert
      Asserts:
        - Type: contain
          Var: YELLOW_BAR_LABEL_VALUE
          Value: This device has not yet been delivered
  # Check there's a Demo Patient on the Patient List
    - Type: wait_for
      Role: localiOS
      Strategy: xpath
      Id: $PAGE.snf_home.new_request_btn$
    - Type: click
      Strategy: xpath
      Role: localiOS
      Id: $PAGE.snf_home.new_request_btn$
    - Type: wait_for
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.snf_new_request_form.patient_name_select$
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.snf_new_request_form.patient_name_select$
    - Type: click
      Strategy: class_chain
      Role: localiOS
      Id: $PAGE.snf_new_request_form.patient_based_on_name$
      Condition:
      - Value: 5
        Operation: visible
        Result: true
