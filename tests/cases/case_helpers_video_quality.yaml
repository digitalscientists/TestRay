GetCallRecordings:
  ParallelRoles: true
  Roles:
    - Role: command1
      App: command
  Actions:
    - Type: command
      Role: command1
      Value: mkdir -p $AND_CLI_TEST_FOLDER$
    - Type: sync
    - Type: command
      Value: "ffmpeg -y -f avfoundation -t $AND_CLI_TIME$ -framerate 30 -probesize 42M  -pix_fmt uyvy422 -i \"$AND_CLI_VIDEO_IN$:\" $AND_CLI_TEST_FOLDER$/output.mp4"
      Role: command1
    - Type: sync

AnalyzeRecordings:
  ParallelRoles: true
  Roles:
    - Role: command1
      App: command
  Actions:
    # Get bit rate
    - Type: command
      Value: "ffprobe -v error -select_streams v:0 -show_entries stream=bit_rate -of default=noprint_wrappers=1:nokey=1 $AND_CLI_TEST_FOLDER$/output.mp4"
      Role: command1
      Greps:
        - var: BIT_RATE
          match: "(.*)"
    # Get count of frames
    - Type: command
      Value: "ffprobe -v error -select_streams v:0 -show_entries stream=nb_frames -of default=noprint_wrappers=1:nokey=1 $AND_CLI_TEST_FOLDER$/output.mp4"
      Role: command1
      Greps:
        - var: FRAME_COUNT
          match: "(.*)"   
    # Get pixel count of video (resolution)
    - Type: command
      Value: "ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 $AND_CLI_TEST_FOLDER$/output.mp4"
      Role: command1
      Greps:
        - var: VIDEO_PIXEL_COUNT
          match: "(.*)"   
    # Get average frame rate
    - Type: command
      Value: "ffprobe -v error -select_streams v:0 -show_entries stream=avg_frame_rate -of default=noprint_wrappers=1:nokey=1 $AND_CLI_TEST_FOLDER$/output.mp4"
      Role: command1
      Greps:
        - var: AVG_FRAME_RATE
          match: "(.*)"   
    - Type: sync

VideoQualityAssertions:
  Roles:
  - Role: command1
    App: command
  Actions:
    # Assert that bit rate is greater than 1.5 kbps.
    - Type: assert
      Asserts:
        - Type: gt
          Var: BIT_RATE
          Value: 1500000 #low rate
    # Assert that frame count is framerate * seconds (150 on this case is the most accurate)
    # Let's give ffmpeg a margin o 1 seconds so it's expected to record betweeen 4~6 seconds.
    - Type: assert
      Asserts:
        - Type: ge
          Var: FRAME_COUNT
          Value: 120 #minimum for 4 seconds.
    - Type: assert
      Asserts:
        - Type: le
          Var: FRAME_COUNT
          Value: 180 #maximum for 6 seconds.
    # Assert that pixel count (resolution) of the video is 3584x2240.
    - Type: assert
      Asserts:
        - Type: eq
          Var: VIDEO_PIXEL_COUNT
          Value: "3584x2240"
    # Assert that the average frame rate is 30/1
    - Type: assert
      Asserts:
        - Type: eq
          Var: AVG_FRAME_RATE
          Value: "30/1"